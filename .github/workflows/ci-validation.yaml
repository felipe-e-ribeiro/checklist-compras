name: Test Code

on:
  push:
    push:
      - 'main'
      - 'dev'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Image for application
      run: docker build -t my_app .

    - name: Start Mysql
      run: |
        docker run -d --name mysql -e MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }} -e MYSQL_DATABASE=${{ env.MYSQL_DATABASE }} -p 3306:3306 mysql:5.7

    - name: Start container App
      run: |
        docker run -d --name node-app -p 3000:3000 --link mysql:db my_app

    - name: Wait for MySQL to be ready
      run: |
        end=$(($(date +%s) + 60))
        until docker exec mysql mysql -uroot -p${MYSQL_ROOT_PASSWORD} -e "CREATE DATABASE \`${MYSQL_DATABASE}\`;"; do
          if [[ $(date +%s) -ge $end ]]; then
            echo "Database creation timed out."
            break
          fi
          echo "Waiting for MySQL to be ready to create the database..."
          sleep 5
        done
      env:
        MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}

    - name: Import MySQL Database
      run: docker cp db/lista_compras.sql mysql:/tmp
    
    - name: Populate MySQL Database
      run: docker exec -it mysql bash -c "mysql -u root --password=${MYSQL_ROOT_PASSWORD} ${MYSQL_DATABASE} < /tmp/lista_compras.sql"
      env:
        MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}

    - name: Test application
      run: |
        sleep 10  # waiting for Node app to start up
        curl -s http://localhost:3000
    
    - name: Clean up
      if: always()
      run: docker stop node-app mysql
