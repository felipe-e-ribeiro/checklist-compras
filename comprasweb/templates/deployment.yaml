apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.comprasweb.serviceName }}-{{ .Values.env }}"
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.comprasweb.replicaCount }}
  selector:
    matchLabels:
      app: "{{ .Values.comprasweb.serviceName }}"
  template:
    metadata:
      labels:
        app: {{ .Values.comprasweb.serviceName | quote }}
        version: {{ .Values.comprasweb.image.tag | quote }}
        web: "comprasweb"
    spec:
      containers:
        - name: "{{ .Values.comprasweb.serviceName }}-{{ .Values.env }}"
          image: "{{ .Values.comprasweb.image.repository }}:{{ .Values.comprasweb.image.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: VERSION
              value: "{{ .Values.comprasweb.image.tag }}"
          ports:
            - containerPort: {{ .Values.comprasweb.port }}
              protocol: TCP
          env:
          - name: REDIS_HOST
            value: {{ .Values.redishost }}
          - name: MYSQL_HOST
            valueFrom:
              secretKeyRef:
                name: "compras-db-secret-{{ .Values.env }}"
                key: hostaddrdb
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "compras-db-secret-{{ .Values.env }}"
                key: passwordb
          - name: MYSQL_DB
            valueFrom:
              secretKeyRef:
                name: "compras-db-secret-{{ .Values.env }}"
                key: databasename
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: "compras-db-secret-{{ .Values.env }}"
                key: usernamedb
